var THREE_CustomShaderMaterial=function(e,r){"use strict";function n(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),r.default=e,Object.freeze(r)}var a=n(r);class o extends a.Material{constructor(e){if(!e)throw new Error("Options object must be provided.");e.uniforms||(e.uniforms={}),e.passthrough||(e.passthrough={});const r=new a[e.baseMaterial](e.passthrough);super();for(const e in r)void 0===this[e]&&(this[e]=0);this.setValues(r);const n=/\/\*[\s\S]*?\*\/|\/\/.*/g;this.onBeforeCompile=r=>{var a,o,t,s,l,c;r.vertexShader=i("vert",r.vertexShader,{defines:null===(a=e.vShader.defines)||void 0===a?void 0:a.replace(n,""),header:null===(o=e.vShader.header)||void 0===o?void 0:o.replace(n,""),main:null===(t=e.vShader.main)||void 0===t?void 0:t.replace(n,"")}),e.fShader&&(r.fragmentShader=i("frag",r.fragmentShader,{defines:null===(s=e.fShader.defines)||void 0===s?void 0:s.replace(n,""),header:null===(l=e.fShader.header)||void 0===l?void 0:l.replace(n,""),main:null===(c=e.fShader.main)||void 0===c?void 0:c.replace(n,"")})),r.uniforms=Object.assign(Object.assign({},r.uniforms),e.uniforms),this.uniforms=r.uniforms,this.needsUpdate=!0}}}function i(e,r,n){const{defines:a="",header:o="",main:i=""}=n;let t=r,s=i.includes("csm_Position")?"csm_Position":"position",l=i.includes("csm_Normal")?"csm_Normal":"normal",c=i.includes("csm_DiffuseColor")?"diffuseColor = csm_DiffuseColor":"";i.includes("newPos")&&(s="newPos"),i.includes("newNormal")&&(l="newNormal"),i.includes("newColor")&&(c="diffuseColor = newColor");const d="vert"===e?{"#include <defaultnormal_vertex>":`\n          vec3 transformedNormal = ${l};\n          `,"#include <project_vertex>":`\n          transformed = ${s};\n          #include <project_vertex>\n        `}:{"#include <color_fragment>":`\n          #include <color_fragment>\n          ${c};\n    `};return Object.keys(d).forEach((e=>{var r,n;r=e,n=d[e],t=t.split(r).join(n)})),t=t.replace("void main() {",`\n      ${o}\n      void main() {\n        vec3 csm_Position;\n        vec3 csm_Normal;\n        vec4 csm_DiffuseColor;\n        ${i}\n      `),`\n      ${a}\n      ${t}\n    `}return e.CustomShaderMaterial=o,e.TYPES={NORMAL:"MeshNormalMaterial",BASIC:"MeshBasicMaterial",PHONG:"MeshPhongMaterial",MATCAP:"MeshMatcapMaterial",TOON:"MeshToonMaterial",PHYSICAL:"MeshPhysicalMaterial",LAMBERT:"MeshLambertMaterial",DEPTH:"MeshDepthMaterial",POINTS:"PointsMaterial"},Object.defineProperty(e,"__esModule",{value:!0}),e}({},THREE);
//# sourceMappingURL=three-csm.js.map
